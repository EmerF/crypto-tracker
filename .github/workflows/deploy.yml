name: Build, Test, and Deploy to AWS

on:
  push:
    branches:
      - deploy
  pull_request:
    branches:
      - deploy

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.24
        options: --privileged

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: üß™ Build with Maven
        run: mvn clean package -DskipTests

      - name: üê≥ Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: üß™ Integration Test via Docker Compose
        run: |
          docker-compose up -d
          echo "‚è≥ Waiting for app to start..."
          sleep 50
          curl --fail http://localhost:8080/coins/fetch/ada || exit 1
          docker-compose down -v

  deploy-to-aws:
    runs-on: ubuntu-latest
    needs: build-test
    environment: production

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Configure AWS CLI
        run: |
          aws sts get-caller-identity

      - name: Initialize Terraform
        run: |
          cd terraform/
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform/
          terraform apply -auto-approve tfplan

      - name: Deploy Kubernetes manifests
        run: |
          kubectl apply -f k8s/
